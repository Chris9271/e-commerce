{"ast":null,"code":"import { Products, Location, Cart } from '../../data';\nconst initState = {\n  Products,\n  Location,\n  Cart\n};\n\nconst rootReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      if (state.Cart.length > 0) {\n        for (let i = 0; i < state.Cart.length; i++) {\n          if (state.Cart[i].id === action.payload.id) {\n            const itemList = state.Cart.map(item => {\n              if (item.id === action.payload.id) {\n                item.quantity += 1;\n              }\n\n              return item;\n            });\n            return { ...state,\n              Cart: itemList\n            };\n          }\n        }\n      }\n\n      return { ...state,\n        Cart: [...state.Cart, action.payload]\n      };\n\n    case \"REMOVE_FROM_CART\":\n      const filteredItem = state.Cart.filter(item => item.id !== action.payload);\n      return { ...state,\n        Cart: filteredItem\n      };\n\n    case \"INCREASE_QUANTITY\":\n      const increaseItem = state.Cart.map(item => {\n        if (item.id === action.payload) {\n          item.quantity += 1;\n          item.totalPrice += Number(item.price);\n        }\n\n        return item;\n      });\n      return { ...state,\n        Cart: increaseItem\n      };\n\n    case \"DECREASE_QUANTITY\":\n      const decreaseItem = state.Cart.map(item => {\n        if (item.id === action.payload) {\n          item.quantity -= 1;\n          item.totalPrice -= Number(item.price);\n        }\n\n        return item;\n      });\n      return { ...state,\n        Cart: decreaseItem\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/chris/Desktop/WMAD/Major/ecommerce/src/components/reducer/rootReducer.js"],"names":["Products","Location","Cart","initState","rootReducer","state","action","type","length","i","id","payload","itemList","map","item","quantity","filteredItem","filter","increaseItem","totalPrice","Number","price","decreaseItem"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,QAAlB,EAA4BC,IAA5B,QAAuC,YAAvC;AAEA,MAAMC,SAAS,GAAG;AACdH,EAAAA,QADc;AAEdC,EAAAA,QAFc;AAGdC,EAAAA;AAHc,CAAlB;;AAMA,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGF,SAAT,EAAoBG,MAApB,KAA+B;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACI,UAAGF,KAAK,CAACH,IAAN,CAAWM,MAAX,GAAoB,CAAvB,EAAyB;AACrB,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,KAAK,CAACH,IAAN,CAAWM,MAA9B,EAAsCC,CAAC,EAAvC,EAA0C;AACtC,cAAGJ,KAAK,CAACH,IAAN,CAAWO,CAAX,EAAcC,EAAd,KAAqBJ,MAAM,CAACK,OAAP,CAAeD,EAAvC,EAA0C;AACtC,kBAAME,QAAQ,GAAGP,KAAK,CAACH,IAAN,CAAWW,GAAX,CAAeC,IAAI,IAAI;AACxC,kBAAGA,IAAI,CAACJ,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,EAA9B,EAAiC;AAC7BI,gBAAAA,IAAI,CAACC,QAAL,IAAiB,CAAjB;AACH;;AACG,qBAAOD,IAAP;AACH,aALgB,CAAjB;AAMJ,mBAAM,EACF,GAAGT,KADD;AAEFH,cAAAA,IAAI,EAAEU;AAFJ,aAAN;AAIH;AAAC;AACL;;AACD,aAAM,EACF,GAAGP,KADD;AAEFH,QAAAA,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAV,EAAgBI,MAAM,CAACK,OAAvB;AAFJ,OAAN;;AAKJ,SAAK,kBAAL;AACI,YAAMK,YAAY,GAAGX,KAAK,CAACH,IAAN,CAAWe,MAAX,CAAkBH,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYJ,MAAM,CAACK,OAA7C,CAArB;AACA,aAAM,EACF,GAAGN,KADD;AAEFH,QAAAA,IAAI,EAAEc;AAFJ,OAAN;;AAKJ,SAAK,mBAAL;AACI,YAAME,YAAY,GAAGb,KAAK,CAACH,IAAN,CAAWW,GAAX,CAAgBC,IAAD,IAAU;AAC1C,YAAGA,IAAI,CAACJ,EAAL,KAAYJ,MAAM,CAACK,OAAtB,EAA8B;AAC1BG,UAAAA,IAAI,CAACC,QAAL,IAAiB,CAAjB;AACAD,UAAAA,IAAI,CAACK,UAAL,IAAmBC,MAAM,CAACN,IAAI,CAACO,KAAN,CAAzB;AACH;;AACD,eAAOP,IAAP;AACH,OANoB,CAArB;AAOA,aAAM,EACF,GAAGT,KADD;AAEFH,QAAAA,IAAI,EAAEgB;AAFJ,OAAN;;AAKJ,SAAK,mBAAL;AACQ,YAAMI,YAAY,GAAGjB,KAAK,CAACH,IAAN,CAAWW,GAAX,CAAgBC,IAAD,IAAU;AAC1C,YAAGA,IAAI,CAACJ,EAAL,KAAYJ,MAAM,CAACK,OAAtB,EAA8B;AAC1BG,UAAAA,IAAI,CAACC,QAAL,IAAiB,CAAjB;AACAD,UAAAA,IAAI,CAACK,UAAL,IAAmBC,MAAM,CAACN,IAAI,CAACO,KAAN,CAAzB;AACH;;AACD,eAAOP,IAAP;AACH,OANoB,CAArB;AAOA,aAAM,EACF,GAAGT,KADD;AAEFH,QAAAA,IAAI,EAAEoB;AAFJ,OAAN;;AAKR;AACI,aAAOjB,KAAP;AAxDR;AA2DH,CA5DD;;AA8DA,eAAeD,WAAf","sourcesContent":["import {Products, Location, Cart} from '../../data';\n\nconst initState = {\n    Products,\n    Location,\n    Cart\n}\n\nconst rootReducer = (state = initState, action) => {\n    switch(action.type){\n        case \"ADD_TO_CART\":\n            if(state.Cart.length > 0){\n                for(let i = 0; i < state.Cart.length; i++){\n                    if(state.Cart[i].id === action.payload.id){\n                        const itemList = state.Cart.map(item => {\n                        if(item.id === action.payload.id){\n                            item.quantity += 1\n                        }\n                            return item;  \n                        })\n                    return{\n                        ...state,\n                        Cart: itemList\n                    };\n                }}\n            }\n            return{\n                ...state,\n                Cart: [...state.Cart, action.payload]\n            };\n\n        case \"REMOVE_FROM_CART\":\n            const filteredItem = state.Cart.filter(item => item.id !== action.payload)\n            return{\n                ...state,\n                Cart: filteredItem\n            };\n\n        case \"INCREASE_QUANTITY\":\n            const increaseItem = state.Cart.map((item) => {\n                if(item.id === action.payload){\n                    item.quantity += 1;\n                    item.totalPrice += Number(item.price)\n                }\n                return item;\n            })\n            return{\n                ...state,\n                Cart: increaseItem\n            };\n\n        case \"DECREASE_QUANTITY\":\n                const decreaseItem = state.Cart.map((item) => {\n                    if(item.id === action.payload){\n                        item.quantity -= 1; \n                        item.totalPrice -= Number(item.price)\n                    }\n                    return item;\n                })\n                return{\n                    ...state,\n                    Cart: decreaseItem\n                };\n\n        default:\n            return state;\n    }\n\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}